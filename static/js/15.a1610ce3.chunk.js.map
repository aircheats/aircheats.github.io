{"version":3,"sources":["components/auth/register.jsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","useUser","register","error","success","classes","profile","loadingUser","login_google","useState","email","setEmail","password","setPassword","firebase","useHistory","useFirebaseApp","user","useUserFirebase","component","maxWidth","data","fullWidth","variant","color","className","onClick","auth","signOut","type","noValidate","container","item","xs","sm","autoComplete","name","required","id","label","autoFocus","disabled","onChange","e","target","value","control","justifyContent","href","visible","status","text","msg"],"mappings":"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","file":"static/js/15.a1610ce3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport AIRalert from 'components/alert/alert';\r\nimport './auth.css'\r\nimport useUser from 'hooks/useUser';\r\n\r\n//Firebase\r\nimport \"firebase/auth\";\r\nimport {useFirebaseApp, useUser as useUserFirebase} from 'reactfire'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Firebase from \"firebase/app\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const {register,error,success,profile,loadingUser,login_google} = useUser()\r\n  const classes = useStyles();\r\n  const [ email, setEmail] = useState('');\r\n  const [ password, setPassword] = useState('');\r\n  // const [error,setError] = useState({status:false,msg:\"\"})\r\n  // const [success,setSuccess] = useState({status:false,msg:\"\"})\r\n  const history = useHistory();\r\n\r\n  const firebase = useFirebaseApp();\r\n  const user = useUserFirebase();\r\n\r\n  const logout = ()=>{\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      {\r\n        user.data?\r\n        <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"logout_button\"\r\n              onClick={logout}\r\n            >\r\n              LOGOUT\r\n        </Button>\r\n        :\r\n        \r\n        <div className={classes.paper}>\r\n          <button type=\"button\" className=\"login-with-google-btn\" >\r\n            Sign in with Google\r\n          </button>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  disabled\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                  disabled\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={()=>{register(email,password)}}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"#login\" variant=\"body2\">\r\n                  Already have an account? Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      }\r\n      <AIRalert visible={error.status} text={error.msg} type=\"error\"></AIRalert>\r\n      <AIRalert visible={success.status} text={success.msg} type=\"success\"></AIRalert>\r\n    </Container>\r\n  );\r\n}"],"sourceRoot":""}